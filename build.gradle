buildscript {
	repositories { mavenCentral() }
}
plugins {
	id 'maven-publish'
	id 'java-library'
}
project.group = 'com.rndbblnn'
project.version = '1.0.0'

allprojects {
	repositories {
		mavenCentral()
		mavenLocal()
		maven { url 'https://jitpack.io' }
	}
	apply plugin: 'groovy'
	sourceCompatibility = 11
}

configurations.all {
	exclude group:"org.springframework.boot", module: "spring-boot-starter-security"
}

dependencies {

	def springBootVersion = "2.7.4"
	def lombokVersion = "1.18.24"

	annotationProcessor "org.springframework.boot:spring-boot-autoconfigure-processor:$springBootVersion"
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor:$springBootVersion"

	implementation 'com.rndbblnn:stonks-commons-starter:0.0.1'

	// spring stuff
	implementation "org.springframework.boot:spring-boot-starter-jdbc:$springBootVersion"
	implementation "org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion"
	implementation "org.springframework.boot:spring-boot-starter-cache:$springBootVersion"
	implementation 'org.springframework:springloaded:1.2.8.RELEASE'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.12'

	// DB
	implementation 'org.postgresql:postgresql:42.5.1'

	// caching
	implementation "org.springframework.boot:spring-boot-starter-data-redis:$springBootVersion"

	implementation 'de.ruedigermoeller:fst:3.0.3'
	implementation 'com.esotericsoftware:kryo:5.3.0'
	implementation 'org.redisson:redisson-spring-boot-starter:3.17.7'

	// web shit
	implementation "org.springframework.boot:spring-boot-starter-thymeleaf:$springBootVersion"
	implementation "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
	implementation "org.springframework.boot:spring-boot-starter-webflux:$springBootVersion"

	implementation "org.springframework.boot:spring-boot-devtools:$springBootVersion"
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor:$springBootVersion"

	// sheet shit
	implementation 'com.opencsv:opencsv:5.7.1'

	// utils
	implementation 'com.google.guava:guava:31.1-jre'
	implementation 'org.apache.commons:commons-lang3:3.12.0'
	implementation 'org.apache.commons:commons-math3:3.6.1'
	implementation 'commons-io:commons-io:2.11.0'

	implementation 'org.projectlombok:lombok:1.18.24'
	implementation 'org.seleniumhq.selenium:selenium-java:4.5.3'
	implementation 'io.netty:netty-tcnative-boringssl-static:2.0.54.Final' // for spring's WebClient
	implementation 'org.modelmapper.extensions:modelmapper-spring:3.1.0'

	implementation "org.projectlombok:lombok:$lombokVersion"
	compileOnly "org.projectlombok:lombok:$lombokVersion"
	annotationProcessor "org.projectlombok:lombok:$lombokVersion"
	testCompileOnly "org.projectlombok:lombok:$lombokVersion"
	testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"

	testImplementation "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
	testImplementation 'junit:junit:4.13.2'
	testImplementation('org.junit.jupiter:junit-jupiter-api:5.9.0')
	testImplementation 'org.mockito:mockito-core:4.2.0'

	testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.9.0')
}
compileJava.dependsOn(processResources)

apply plugin: 'idea'

idea {
	module {
		inheritOutputDirs = false
		outputDir = file("$buildDir/classes/main/")
	}
}

test {
	useJUnitPlatform()
//	exclude 'com/rno/tickerscanner/**'
//	filter {
//		includeTestsMatching "com.rno.tickerscanner.BaseIntegrationTest"
//	}
	testLogging.showStandardStreams = true
}

java {
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			groupId = 'com.rndbblnn'
			artifactId = 'yuzu-ohlcv-saver'
			version = "0.0.1"
			from components.java
		}
	}
	repositories {
		mavenLocal()
	}
}

wrapper {
	gradleVersion = '7.5.1'
}